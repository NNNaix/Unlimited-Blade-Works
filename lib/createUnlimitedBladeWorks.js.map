{"version":3,"file":"createUnlimitedBladeWorks.js","sourceRoot":"","sources":["../src/createUnlimitedBladeWorks.ts"],"names":[],"mappings":"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","sourcesContent":["// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n// 现阶段唯一的作用就是初始化模板.\n// 修改该文件的唯一原因是为 `createSwordBone` 添加更多的警告和命令的故障排除信息.\n// 尽可能避免添加破坏向前兼容的更改！\n// 对新的语言特性也要小心.\n//\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nimport chalk from 'chalk'\nimport commander from 'commander'\nimport envinfo from 'envinfo'\nimport {execSync} from 'child_process'\nimport semver from 'semver'\nimport logger from './utils/logs'\nimport path from \"path\";\nimport fs from 'fs-extra'\nimport os from 'os'\nimport inquirer from 'inquirer'\nimport {\n    CACHE_JSON_NAME,\n    DEFAULT_GIT_REPO_URL,\n    packageJson,\n    packageJsonFieldsToExclude\n} from \"./utils/const\";\nimport {tgz} from 'compressing'\nimport {\n    checkAppName,\n    checkForLatestVersion,\n    checkIfBuildInRegistryListOnline,\n    checkIfCouldUsingCache,\n    checkIfRegistryOnline,\n    isSafeToCreateProjectIn\n} from \"./utils/check\";\nimport {\n    getAvailableTemplateList,\n    getCachePath,\n    getCacheTemplatePackageName,\n    getHttpClientAdapter,\n    getTemplatePackageTarballUrl\n} from \"./utils/get\";\nimport search from \"libnpmsearch\";\n\ninquirer.registerPrompt('autocomplete', require('inquirer-autocomplete-prompt'));\n\nconst {log, warning, info, success, error} = logger\n\nlet registry: string\nlet enableOffline: boolean\nlet enableOverride: boolean\n\nasync function init() {\n    const program = new commander.Command(packageJson.name)\n        .version(packageJson.version)\n        .usage(`[选项]`)\n        // .option('--verbose', '输出更详细的日志')\n        .option('--info', '仅输出环境调试信息，不执行初始化')\n        .option('--clean', '仅清理本地缓存数据，不执行初始化')\n        .option('--registry <registry>', '设置初始化项目过程中使用的注册源')\n        .option('--root-directory <rootDirectory>', '设置项目初始化的根目录，<rootDirectory> 为绝对路径')\n        .option('--remote-repo <remoteRepo>', '设置项目的 git 远程仓库地址')\n        .option('--offline', '启用离线模式，将使用本地缓存数据来替代远程注册源')\n        .option('--override', '启用覆写模式，会强制覆盖掉和项目工程模板产生冲突的文件')\n        // TODO\n        // .option(\n        //     '--plugin <alternative-package>',\n        //     '使用一个本地的脚手架插件'\n        // )\n        // .option(\n        //     '--local-template <path-to-template>',\n        //     '指定一个来自本地的模板'\n        // )\n        // .option('--use-yarn', '使用 yarn 作为包管理器初始化项目')\n        // .option('--use-yarn-pnp', '使用 yarn 作为包管理器同时启用 Plug\\'n\\'Play\\n 安装策略初始化项目 ')\n        // .option('--use-pnpm', '使用 pnpm 作为包管理器初始化项目')\n        .allowUnknownOption()\n        .on('--help', () => {\n            log();\n            log(\n                `  如果不指定 ${chalk.green('--registry')}，模板将默认启用注册源自动选择模式，会基于内置注册源列表自动检测可用的注册源进行初始化.`\n            );\n            log();\n            log(\n                `  如果不指定 ${chalk.green('--root-directory')}，项目将默认使用当前目录: ${chalk.green(process.cwd())} 进行初始化.`\n            );\n            log();\n            log(\n                `  如果不指定 ${chalk.green('--remote-repo')}，项目将不会进行 git 仓库的同步.`\n            );\n            log();\n            log(\n                `  如果不指定 ${chalk.green('--override')}，脚手架将默认使用安全的写入策略，如果项目初始化目录存在白名单以外的文件则警告并终止写入.`\n            );\n\n            // log(`    一个自定义的 ${chalk.cyan('--local-template')} 可以是下列之一:`);\n            // log(\n            //     `      - 一个发布在 npm 上 @cyber-bones/app-boilerplate 仓库下的自定义模板: ${chalk.green(\n            //         'my-custom-template'\n            //     )}`\n            // );\n            // log(\n            //     `      - 一个相对当前工作目录的本地路径: ${chalk.green(\n            //         'file:../my-custom-template'\n            //     )}`\n            // );\n            log();\n            log(\n                `  如果你发现当前功能存在缺陷亦或是对脚手架的后续开发方向有更好的建议, 请联系 ${chalk.cyan(packageJson.author.email)} 或直接提出你的 issue:`\n            );\n            log(\n                `  ${chalk.cyan(\n                    packageJson.repository.url\n                )}`\n            );\n            log();\n        })\n        .parse(process.argv);\n\n    const opts = program.opts()\n\n    const rootDirectory = opts.rootDirectory ?? process.cwd()\n    enableOffline = opts.offline ?? false\n    enableOverride = opts.override ?? false\n\n    if (opts.info) {\n        log(chalk.bold('\\n 环境信息:'));\n        log(\n            `\\n ${packageJson.name} 当前版本: ${packageJson.version}`\n        );\n        log(`  脚手架启动路径： ${process.cwd()}`);\n        log(`  项目初始化根目录： ${rootDirectory}`);\n        return envinfo\n            .run(\n                {\n                    System: ['OS', 'CPU'],\n                    Binaries: ['Node', 'npm', 'Yarn', 'pnpm'],\n                    Browsers: [\n                        'Chrome',\n                        'Edge',\n                        'Internet Explorer',\n                        'Firefox',\n                        'Safari',\n                    ]\n                },\n                {\n                    duplicates: true,\n                    showNotFound: true,\n                }\n            )\n            .then(log);\n    }\n\n\n    if (opts.clean) {\n        try {\n            const cachePath = getCachePath()\n            fs.removeSync(cachePath)\n            success(`缓存已移除: ${cachePath}`)\n        } catch (err) {\n            error(err.message)\n        }\n        process.exit(1)\n    }\n\n\n    if (!enableOffline) {\n        if (opts.registry && (await checkIfRegistryOnline(opts.registry)).isOnline) {\n            registry = opts.registry\n        } else {\n            const registryOnlineStatusList = await checkIfBuildInRegistryListOnline()\n            registry = registryOnlineStatusList.reduce((p, c) => p ?? (c.isOnline ? c.registry : p), undefined as undefined | string) as string\n\n            if (!registry) {\n                log(`无可用的注册源，请检查当前设备的网络环境以及代理设置或使用 ${chalk.green('\\`--offline\\`')} 参数以启用离线模式`)\n                process.exit(1)\n            }\n        }\n        log(\n            `正在使用注册源: ${chalk.green(registry)} 初始化项目.`\n        )\n    } else {\n        log(\n            `正在使用离线模式初始化项目.`\n        )\n    }\n\n\n    // 我们首先直接通过 API 检查注册源 create-web-app 是否是最新版本，如果失败我们尝试性能更差的 `npm view [package] version` 命令.\n    // 这对那些处于直接访问 npm 时被防火墙拦截的环境中的用户非常重要, 以及注册源是私有源的情况.\n    (!enableOffline ? (checkForLatestVersion(registry as string)\n        .catch(() => {\n            try {\n                return execSync(`npm view ${packageJson.name} version`).toString().trim()\n            } catch (e) {\n                return null\n            }\n        })) : Promise.resolve(null)).then((latest) => {\n        if (latest && semver.lt(packageJson.version, latest as string)) {\n            log();\n            warning(\n                chalk.yellow(\n                    `您正在运行 \\`${packageJson.name}\\` ${packageJson.version}, 当前版本落后于最新版本 (${latest}).\\n\\n` +\n                    `我们不支持全局安装 \\`${packageJson.name}\\`.`\n                )\n            );\n            log();\n            log(\n                '请使用下面的命令卸载全局依赖:\\n' +\n                `- npm uninstall -g ${packageJson.name}\\n` +\n                `- yarn global remove ${packageJson.name}\\n` +\n                `- pnpm remove -g ${packageJson.name}`\n            );\n            log();\n            log(\n                '请参考最新的文档创建模板 :\\n' +\n                `https://www.npmjs.com/package/${packageJson.name}`\n            );\n            log();\n            process.exit(1);\n        } else {\n            inquirer\n                .prompt([{\n                    type: 'input',\n                    name: 'name',\n                    message: '项目名称:',\n                    prefix: '',\n                    validate(name: string) {\n                        return checkAppName(name)\n                    }\n                }, {\n                    type: 'input',\n                    name: 'version',\n                    message: '版本:',\n                    prefix: '',\n                    default: '1.0.0',\n                    validate(version: string) {\n                        const isVersionValid = !!semver.valid(version)\n                        !isVersionValid && error(chalk.red(`无效的版本，请使用符合语义化规范的版本号，更多信息请查看 https://semver.org/`))\n                        return isVersionValid\n                    }\n                }, {\n                    type: 'input',\n                    name: 'description',\n                    message: '描述:',\n                    prefix: '',\n                    transformer(description) {\n                        return description ?? ''\n                    }\n                }, {\n                    type: 'autocomplete',\n                    name: 'template',\n                    prefix: '',\n                    message: `请选择项目工程模板${enableOffline ? '[离线模式]' : ''}:`,\n                    source: (_: string, template: string) => getAvailableTemplateList(registry as string, template, enableOffline)\n                },\n                ])\n                .then((initParams: { name: string, version: string, template: search.Result, description: string }) => {\n                    createApp({\n                        remoteRepoUrl: opts.remoteRepo,\n                        rootDirectory: rootDirectory as string,\n                        verbose: opts.verbose,\n                        ...initParams,\n                    })\n                });\n        }\n    })\n}\n\nasync function createApp({\n                             name,\n                             version,\n                             description,\n                             rootDirectory,\n                             verbose,\n                             template,\n                             remoteRepoUrl,\n                         }:\n                             {\n                                 name: string,\n                                 version: string,\n                                 description: string,\n                                 rootDirectory: string,\n                                 verbose: boolean,\n                                 template: search.Result,\n                                 remoteRepoUrl?: string,\n                             }) {\n    const appDirectory = path.resolve(rootDirectory, name);\n    const unsupportedNodeVersion = !semver.satisfies(process.version, packageJson.engines.node);\n\n\n    log();\n    log(`当前位于 ${chalk.green(appDirectory)}，项目正在初始化...`);\n    log();\n\n    if (unsupportedNodeVersion) {\n        log(\n            chalk.yellow(\n                `您正在使用的 Node 版本为： ${process.version}， \\`${packageJson.name}\\` ，项目将使用不支持的旧版本工具初始化.\\n\\n` +\n                `请更新到 Node ${packageJson.engines.node} 以获得一个更好的，全面支持的开发体验.\\n`\n            )\n        );\n    }\n\n    if (!DEFAULT_GIT_REPO_URL){\n        info('没有指定远程仓库，即将跳过 git 初始化，请后续手动执行:\\n')\n        info(`git init`)\n        info(`git remote add origin ${remoteRepoUrl}\\n`)\n    }else if (!enableOffline) {\n        try {\n            log(execSync(`git clone ${remoteRepoUrl} ${appDirectory}`).toString().trim())\n        } catch (e) {\n            warning('git clone 远程仓库失败，即将跳过 git 初始化，请后续手动执行:\\n')\n            info(`git init`)\n            info(`git remote add origin ${remoteRepoUrl}\\n`)\n            error(e)\n        }\n    }\n\n    fs.ensureDirSync(appDirectory);\n    if (!enableOverride && !isSafeToCreateProjectIn(appDirectory)) {\n        process.exit(1);\n    }\n    process.chdir(appDirectory);\n\n    const cacheTemplatePackagePath = await useCache(template)\n\n    await unpackFromCache(cacheTemplatePackagePath, appDirectory)\n\n    updateAppPackageJson(appDirectory, {\n        name,\n        version,\n        description,\n        private: true\n    })\n    updateNpmrc(appDirectory)\n\n    // install()\n\n    success('项目初始化完成，请参考项目目录下 README.md 进行后续开发.')\n\n}\n\n/**\n * 1. 检查本地缓存是否命中（模板名是否完全匹配，模板名中自带版本）\n * 2. 未命中时下载最新模板并替换旧缓存数据\n * @param template\n */\nasync function useCache(template: search.Result) {\n    let cacheTemplatePackagePath: string\n    if (cacheTemplatePackagePath = checkIfCouldUsingCache(template) as string) {\n        log(`正在使用项目工程模板缓存: ${chalk.green(cacheTemplatePackagePath)}`)\n    } else {\n        if (enableOffline) {\n            error(chalk.red('无可用的项目工程模板缓存.'))\n        } else {\n            const templateTarballUrl = await getTemplatePackageTarballUrl(registry as string, template.name)\n            try {\n                cacheTemplatePackagePath = await download(templateTarballUrl, template)\n            } catch (e) {\n                error(e.message)\n                error(chalk.red(`项目工程模板下载失败.\\n 请检查当前设备的网络环境以及代理设置或使用 ${chalk.green('\\`--offline\\`')} 参数以启用离线模式.`))\n                process.exit(1)\n            }\n\n\n            // remove out-date template package\n            const cachePath = getCachePath()\n            fs.readdirSync(cachePath).filter(name => {\n                name.includes(template.name)\n            }).forEach(name => {\n                fs.removeSync(path.resolve(cachePath, name))\n            })\n            updateCacheJson(cachePath, template)\n        }\n    }\n    return cacheTemplatePackagePath\n}\n\nasync function unpackFromCache(cacheTemplatePackagePath: string, appDirectory: string) {\n    log('正在解压项目工程模板...')\n    return new Promise<void>((resolve) => {\n        const cachePath = getCachePath()\n        // unpack to cachePath because npm package wrap files with 'package' folder.\n        tgz.uncompress(cacheTemplatePackagePath, cachePath).then(() => {\n            const templatePath = path.resolve(cachePath, 'package')\n            fs.readdirSync(templatePath).forEach(name => {\n                // map template files and move it to app directory, if have conflict then overwrite it.\n                fs.moveSync(path.join(templatePath, name), path.resolve(appDirectory, name), {overwrite: true})\n            })\n            // remove 'package' folder\n            fs.removeSync(templatePath)\n\n            resolve()\n        }).catch((err) => {\n            if (err) {\n                error(chalk.red(`项目工程模板解压失败: \\n${err.stack}`))\n                process.exit(1)\n            }\n        })\n    })\n}\n\n\nfunction updateAppPackageJson(appDirectory: string, overrideAppJson: JSONType) {\n    log('正在更新 package.json...')\n    try {\n        const appJsonPath = path.join(appDirectory, 'package.json')\n        const oldPackageJson = fs.readJSONSync(appJsonPath,)\n\n        packageJsonFieldsToExclude.forEach(field =>\n            Reflect.deleteProperty(oldPackageJson, field)\n        )\n        fs.writeJSONSync(\n            appJsonPath,\n            {...oldPackageJson, ...overrideAppJson}, {\n                spaces: 2,\n                replacer: null,\n                EOL: os.EOL\n            }\n        );\n    } catch (err) {\n        error(err.message)\n    }\n}\n\nfunction updateCacheJson(cachePath: string, template: search.Result) {\n    log('正在更新 cache.json...')\n    try {\n        const cacheJsonPath = path.resolve(cachePath, CACHE_JSON_NAME)\n        if (!fs.existsSync(cacheJsonPath)) {\n            fs.outputJSONSync(\n                cacheJsonPath,\n                {_lastModifiedTime: Date()},\n                {\n                    spaces: 2,\n                    replacer: null,\n                    EOL: os.EOL\n                }\n            );\n        }\n        const oldCacheJson = fs.readJSONSync(cacheJsonPath)\n\n        fs.writeJSONSync(\n            cacheJsonPath,\n            {...oldCacheJson, ...{[getCacheTemplatePackageName(template.name, template.version)]: template}}, {\n                spaces: 2,\n                replacer: null,\n                EOL: os.EOL\n            }\n        );\n    } catch (err) {\n        error(err.message)\n    }\n}\n\nfunction updateNpmrc(appDirectory: string) {\n    fs.appendFileSync(path.resolve(appDirectory, '.npmrc'), 'SASS_BINARY_SITE=http://npm.taobao.org/mirrors/node-sass')\n}\n\nasync function download(url: string, template: search.Result) {\n    // download at cache directory\n    log('正在下载项目工程模板.\\n');\n    return new Promise<string>((resolve, reject) => {\n        getHttpClientAdapter(url).get(url, res => {\n            if (res.statusCode === 200) {\n                try {\n                    const cacheTemplatePackagePath = getCachePath(getCacheTemplatePackageName(template.name, template.version))\n                    success(`模板下载成功，正在写入本地缓存: ${cacheTemplatePackagePath}...\\n`)\n                    res\n                        .pipe(fs.createWriteStream(cacheTemplatePackagePath))\n                        .on(\"error\", (err) => {\n                            error('模板写入本地失败\\n')\n                            error(err.message)\n                            reject(err)\n                        })\n                        .on('close', () => {\n                            resolve(cacheTemplatePackagePath)\n                        })\n                } catch (err) {\n                    reject(err)\n                }\n            }\n        })\n    })\n}\n\n// async function install() {\n//     const pm = checkPackageNodeVersionSupported()\n//\n//     if (pm === SupportedPackageManager.npm && !checkThatNpmCanReadCwd()) {\n//         process.exit(1);\n//     }\n// // 对不同的包管理器及安装策略进行校验\n//     switch (pm) {\n//         case SupportedPackageManager.yarn_pnpm: {\n//             const yarnInfo = checkYarnVersion();\n//             if (yarnInfo.yarnVersion) {\n//                 if (!yarnInfo.hasMinYarnPnp) {\n//                     log(\n//                         chalk.yellow(\n//                             `您正在使用 Yarn ${yarnInfo.yarnVersion} 并启用了 --use-pnpm 选项， 但是 Plug'n'Play 特性仅 1.12 之后发布的版本支持. 项目将使用不支持的旧版本工具初始化.\\n\\n` +\n//                             `请更新到 Yarn 1.12 或更高的版本以获得一个更好的，全面支持的开发体验.\\n`\n//                         )\n//                     );\n//                     // 1.11 had an issue with webpack-dev-middleware, so better not use PnP with it (never reached stable, but still)\n//                     pm = SupportedPackageManager.yarn;\n//                 }\n//                 if (!yarnInfo.hasMaxYarnPnp) {\n//                     log(\n//                         chalk.yellow(\n//                             '--use-pnp 在 yarn 2 中不再是必需的选项，在 yarn 2 未来的版本中将会被废弃并移除.\\n'\n//                         )\n//                     );\n//                     // 2 supports PnP by default and breaks when trying to use the flag\n//                     pm = SupportedPackageManager.yarn;\n//                 }\n//             }\n//             // 这里不 break，因为 pnp 是 yarn 的特殊安装策略，同样需要执行下面的 yarn 的校验。\n//         }\n//         case SupportedPackageManager.yarn: {\n//             let yarnUsesDefaultRegistry = true;\n//             try {\n//                 yarnUsesDefaultRegistry =\n//                     execSync('yarnpkg config get registry').toString().trim() ===\n//                     'https://registry.yarnpkg.com';\n//             } catch (e) {\n//                 // ignore\n//             }\n//             if (yarnUsesDefaultRegistry) {\n//                 fs.copySync(\n//                     require.resolve('./yarn.lock.cached'),\n//                     path.join(root, 'yarn.lock')\n//                 );\n//             }\n//             break\n//         }\n//\n//         case SupportedPackageManager.pnpm: {\n//             const pnpmInfo = checkPnpmVersion()\n//             if (!pnpmInfo.hasMinPnpm) {\n//                 if (pnpmInfo.pnpmVersion) {\n//                     log(\n//                         chalk.yellow(\n//                             `您正在使用 Pnpm ${pnpmInfo.pnpmVersion}，项目将使用不支持的旧版本工具初始化.\\n\\n` +\n//                             `请跟新到 Pnpm 6.0.0 或更高的版本以获得一个更好的，全面支持的开发体验.\\n`\n//                         )\n//                     );\n//                 }\n//             }\n//             break\n//         }\n//         default: {\n//             const npmInfo = checkNpmVersion();\n//             if (!npmInfo.hasMinNpm) {\n//                 if (npmInfo.npmVersion) {\n//                     log(\n//                         chalk.yellow(\n//                             `您正在使用 Npm ${npmInfo.npmVersion}，项目将使用不支持的旧版本工具初始化.\\n\\n` +\n//                             `请跟新到 Npm 6.0.0 或更高的版本以获得一个更好的，全面支持的开发体验.\\n`\n//                         )\n//                     );\n//                 }\n//             }\n//             break\n//         }\n//     }\n//\n//     log('正在安装项目依赖，过程可能会花费数分钟.');\n//\n// }\n\nexport {\n    init\n}\n"]}